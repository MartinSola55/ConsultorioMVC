#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsultorioMVC
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Consultorio")]
	public partial class DataClasesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDiaHorario(DiaHorario instance);
    partial void UpdateDiaHorario(DiaHorario instance);
    partial void DeleteDiaHorario(DiaHorario instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertHorario(Horario instance);
    partial void UpdateHorario(Horario instance);
    partial void DeleteHorario(Horario instance);
    partial void InsertObrasSociales(ObrasSociales instance);
    partial void UpdateObrasSociales(ObrasSociales instance);
    partial void DeleteObrasSociales(ObrasSociales instance);
    partial void InsertTurno(Turno instance);
    partial void UpdateTurno(Turno instance);
    partial void DeleteTurno(Turno instance);
    partial void InsertPersona(Persona instance);
    partial void UpdatePersona(Persona instance);
    partial void DeletePersona(Persona instance);
    partial void InsertPaciente(Paciente instance);
    partial void UpdatePaciente(Paciente instance);
    partial void DeletePaciente(Paciente instance);
    partial void InsertHistoriasClinica(HistoriasClinica instance);
    partial void UpdateHistoriasClinica(HistoriasClinica instance);
    partial void DeleteHistoriasClinica(HistoriasClinica instance);
    #endregion
		
		public DataClasesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ConsultorioConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DiaHorario> DiaHorarios
		{
			get
			{
				return this.GetTable<DiaHorario>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Horario> Horarios
		{
			get
			{
				return this.GetTable<Horario>();
			}
		}
		
		public System.Data.Linq.Table<ObrasSociales> ObrasSociales
		{
			get
			{
				return this.GetTable<ObrasSociales>();
			}
		}
		
		public System.Data.Linq.Table<Turno> Turnos
		{
			get
			{
				return this.GetTable<Turno>();
			}
		}
		
		public System.Data.Linq.Table<Persona> Personas
		{
			get
			{
				return this.GetTable<Persona>();
			}
		}
		
		public System.Data.Linq.Table<Paciente> Pacientes
		{
			get
			{
				return this.GetTable<Paciente>();
			}
		}
		
		public System.Data.Linq.Table<HistoriasClinica> HistoriasClinicas
		{
			get
			{
				return this.GetTable<HistoriasClinica>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiaHorario")]
	public partial class DiaHorario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _horario_id;
		
		private System.DateTime _dia;
		
		private bool _disponible;
		
		private EntitySet<Turno> _Turnos;
		
		private EntityRef<Horario> _Horario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onhorario_idChanging(int value);
    partial void Onhorario_idChanged();
    partial void OndiaChanging(System.DateTime value);
    partial void OndiaChanged();
    partial void OndisponibleChanging(bool value);
    partial void OndisponibleChanged();
    #endregion
		
		public DiaHorario()
		{
			this._Turnos = new EntitySet<Turno>(new Action<Turno>(this.attach_Turnos), new Action<Turno>(this.detach_Turnos));
			this._Horario = default(EntityRef<Horario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_horario_id", DbType="Int NOT NULL")]
		public int horario_id
		{
			get
			{
				return this._horario_id;
			}
			set
			{
				if ((this._horario_id != value))
				{
					if (this._Horario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onhorario_idChanging(value);
					this.SendPropertyChanging();
					this._horario_id = value;
					this.SendPropertyChanged("horario_id");
					this.Onhorario_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dia", DbType="Date NOT NULL")]
		public System.DateTime dia
		{
			get
			{
				return this._dia;
			}
			set
			{
				if ((this._dia != value))
				{
					this.OndiaChanging(value);
					this.SendPropertyChanging();
					this._dia = value;
					this.SendPropertyChanged("dia");
					this.OndiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disponible", DbType="Bit NOT NULL")]
		public bool disponible
		{
			get
			{
				return this._disponible;
			}
			set
			{
				if ((this._disponible != value))
				{
					this.OndisponibleChanging(value);
					this.SendPropertyChanging();
					this._disponible = value;
					this.SendPropertyChanged("disponible");
					this.OndisponibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiaHorario_Turno", Storage="_Turnos", ThisKey="id", OtherKey="dia_horario_id")]
		public EntitySet<Turno> Turnos
		{
			get
			{
				return this._Turnos;
			}
			set
			{
				this._Turnos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Horario_DiaHorario", Storage="_Horario", ThisKey="horario_id", OtherKey="id", IsForeignKey=true)]
		public Horario Horario
		{
			get
			{
				return this._Horario.Entity;
			}
			set
			{
				Horario previousValue = this._Horario.Entity;
				if (((previousValue != value) 
							|| (this._Horario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Horario.Entity = null;
						previousValue.DiaHorarios.Remove(this);
					}
					this._Horario.Entity = value;
					if ((value != null))
					{
						value.DiaHorarios.Add(this);
						this._horario_id = value.id;
					}
					else
					{
						this._horario_id = default(int);
					}
					this.SendPropertyChanged("Horario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Turnos(Turno entity)
		{
			this.SendPropertyChanging();
			entity.DiaHorario = this;
		}
		
		private void detach_Turnos(Turno entity)
		{
			this.SendPropertyChanging();
			entity.DiaHorario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _email;
		
		private string _password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public Usuario()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="Char(60) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Horarios")]
	public partial class Horario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _hora;
		
		private EntitySet<DiaHorario> _DiaHorarios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnhoraChanging(System.DateTime value);
    partial void OnhoraChanged();
    #endregion
		
		public Horario()
		{
			this._DiaHorarios = new EntitySet<DiaHorario>(new Action<DiaHorario>(this.attach_DiaHorarios), new Action<DiaHorario>(this.detach_DiaHorarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hora", DbType="Time NOT NULL")]
		public System.DateTime hora
		{
			get
			{
				return this._hora;
			}
			set
			{
				if ((this._hora != value))
				{
					this.OnhoraChanging(value);
					this.SendPropertyChanging();
					this._hora = value;
					this.SendPropertyChanged("hora");
					this.OnhoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Horario_DiaHorario", Storage="_DiaHorarios", ThisKey="id", OtherKey="horario_id")]
		public EntitySet<DiaHorario> DiaHorarios
		{
			get
			{
				return this._DiaHorarios;
			}
			set
			{
				this._DiaHorarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiaHorarios(DiaHorario entity)
		{
			this.SendPropertyChanging();
			entity.Horario = this;
		}
		
		private void detach_DiaHorarios(DiaHorario entity)
		{
			this.SendPropertyChanging();
			entity.Horario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObrasSociales")]
	public partial class ObrasSociales : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private bool _habilitada;
		
		private EntitySet<Persona> _Personas;
		
		private EntitySet<Paciente> _Pacientes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnhabilitadaChanging(bool value);
    partial void OnhabilitadaChanged();
    #endregion
		
		public ObrasSociales()
		{
			this._Personas = new EntitySet<Persona>(new Action<Persona>(this.attach_Personas), new Action<Persona>(this.detach_Personas));
			this._Pacientes = new EntitySet<Paciente>(new Action<Paciente>(this.attach_Pacientes), new Action<Paciente>(this.detach_Pacientes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_habilitada", DbType="Bit NOT NULL")]
		public bool habilitada
		{
			get
			{
				return this._habilitada;
			}
			set
			{
				if ((this._habilitada != value))
				{
					this.OnhabilitadaChanging(value);
					this.SendPropertyChanging();
					this._habilitada = value;
					this.SendPropertyChanged("habilitada");
					this.OnhabilitadaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObrasSociales_Persona", Storage="_Personas", ThisKey="id", OtherKey="obra_social_id")]
		public EntitySet<Persona> Personas
		{
			get
			{
				return this._Personas;
			}
			set
			{
				this._Personas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObrasSociales_Paciente", Storage="_Pacientes", ThisKey="id", OtherKey="obra_social_id")]
		public EntitySet<Paciente> Pacientes
		{
			get
			{
				return this._Pacientes;
			}
			set
			{
				this._Pacientes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Personas(Persona entity)
		{
			this.SendPropertyChanging();
			entity.ObrasSociales = this;
		}
		
		private void detach_Personas(Persona entity)
		{
			this.SendPropertyChanging();
			entity.ObrasSociales = null;
		}
		
		private void attach_Pacientes(Paciente entity)
		{
			this.SendPropertyChanging();
			entity.ObrasSociales = this;
		}
		
		private void detach_Pacientes(Paciente entity)
		{
			this.SendPropertyChanging();
			entity.ObrasSociales = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Turnos")]
	public partial class Turno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _persona_id;
		
		private int _dia_horario_id;
		
		private EntityRef<DiaHorario> _DiaHorario;
		
		private EntityRef<Persona> _Persona;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpersona_idChanging(int value);
    partial void Onpersona_idChanged();
    partial void Ondia_horario_idChanging(int value);
    partial void Ondia_horario_idChanged();
    #endregion
		
		public Turno()
		{
			this._DiaHorario = default(EntityRef<DiaHorario>);
			this._Persona = default(EntityRef<Persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_persona_id", DbType="Int NOT NULL")]
		public int persona_id
		{
			get
			{
				return this._persona_id;
			}
			set
			{
				if ((this._persona_id != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpersona_idChanging(value);
					this.SendPropertyChanging();
					this._persona_id = value;
					this.SendPropertyChanged("persona_id");
					this.Onpersona_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dia_horario_id", DbType="Int NOT NULL")]
		public int dia_horario_id
		{
			get
			{
				return this._dia_horario_id;
			}
			set
			{
				if ((this._dia_horario_id != value))
				{
					if (this._DiaHorario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondia_horario_idChanging(value);
					this.SendPropertyChanging();
					this._dia_horario_id = value;
					this.SendPropertyChanged("dia_horario_id");
					this.Ondia_horario_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiaHorario_Turno", Storage="_DiaHorario", ThisKey="dia_horario_id", OtherKey="id", IsForeignKey=true)]
		public DiaHorario DiaHorario
		{
			get
			{
				return this._DiaHorario.Entity;
			}
			set
			{
				DiaHorario previousValue = this._DiaHorario.Entity;
				if (((previousValue != value) 
							|| (this._DiaHorario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiaHorario.Entity = null;
						previousValue.Turnos.Remove(this);
					}
					this._DiaHorario.Entity = value;
					if ((value != null))
					{
						value.Turnos.Add(this);
						this._dia_horario_id = value.id;
					}
					else
					{
						this._dia_horario_id = default(int);
					}
					this.SendPropertyChanged("DiaHorario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Turno", Storage="_Persona", ThisKey="persona_id", OtherKey="id", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Turnos.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Turnos.Add(this);
						this._persona_id = value.id;
					}
					else
					{
						this._persona_id = default(int);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personas")]
	public partial class Persona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private string _apellido;
		
		private string _telefono;
		
		private string _correo;
		
		private int _obra_social_id;
		
		private EntitySet<Turno> _Turnos;
		
		private EntityRef<ObrasSociales> _ObrasSociales;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoChanging(string value);
    partial void OnapellidoChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void Onobra_social_idChanging(int value);
    partial void Onobra_social_idChanged();
    #endregion
		
		public Persona()
		{
			this._Turnos = new EntitySet<Turno>(new Action<Turno>(this.attach_Turnos), new Action<Turno>(this.detach_Turnos));
			this._ObrasSociales = default(EntityRef<ObrasSociales>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this.OnapellidoChanging(value);
					this.SendPropertyChanging();
					this._apellido = value;
					this.SendPropertyChanged("apellido");
					this.OnapellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(100)")]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_obra_social_id", DbType="Int NOT NULL")]
		public int obra_social_id
		{
			get
			{
				return this._obra_social_id;
			}
			set
			{
				if ((this._obra_social_id != value))
				{
					if (this._ObrasSociales.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onobra_social_idChanging(value);
					this.SendPropertyChanging();
					this._obra_social_id = value;
					this.SendPropertyChanged("obra_social_id");
					this.Onobra_social_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Turno", Storage="_Turnos", ThisKey="id", OtherKey="persona_id")]
		public EntitySet<Turno> Turnos
		{
			get
			{
				return this._Turnos;
			}
			set
			{
				this._Turnos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObrasSociales_Persona", Storage="_ObrasSociales", ThisKey="obra_social_id", OtherKey="id", IsForeignKey=true)]
		public ObrasSociales ObrasSociales
		{
			get
			{
				return this._ObrasSociales.Entity;
			}
			set
			{
				ObrasSociales previousValue = this._ObrasSociales.Entity;
				if (((previousValue != value) 
							|| (this._ObrasSociales.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObrasSociales.Entity = null;
						previousValue.Personas.Remove(this);
					}
					this._ObrasSociales.Entity = value;
					if ((value != null))
					{
						value.Personas.Add(this);
						this._obra_social_id = value.id;
					}
					else
					{
						this._obra_social_id = default(int);
					}
					this.SendPropertyChanged("ObrasSociales");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Turnos(Turno entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Turnos(Turno entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pacientes")]
	public partial class Paciente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private string _apellido;
		
		private string _telefono;
		
		private string _direccion;
		
		private string _localidad;
		
		private System.Nullable<System.DateTime> _fecha_nacimiento;
		
		private System.Nullable<int> _obra_social_id;
		
		private EntitySet<HistoriasClinica> _HistoriasClinicas;
		
		private EntityRef<ObrasSociales> _ObrasSociales;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoChanging(string value);
    partial void OnapellidoChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OnlocalidadChanging(string value);
    partial void OnlocalidadChanged();
    partial void Onfecha_nacimientoChanging(System.Nullable<System.DateTime> value);
    partial void Onfecha_nacimientoChanged();
    partial void Onobra_social_idChanging(System.Nullable<int> value);
    partial void Onobra_social_idChanged();
    #endregion
		
		public Paciente()
		{
			this._HistoriasClinicas = new EntitySet<HistoriasClinica>(new Action<HistoriasClinica>(this.attach_HistoriasClinicas), new Action<HistoriasClinica>(this.detach_HistoriasClinicas));
			this._ObrasSociales = default(EntityRef<ObrasSociales>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(60)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(60)")]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this.OnapellidoChanging(value);
					this.SendPropertyChanging();
					this._apellido = value;
					this.SendPropertyChanged("apellido");
					this.OnapellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(60)")]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(100)")]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_localidad", DbType="VarChar(60)")]
		public string localidad
		{
			get
			{
				return this._localidad;
			}
			set
			{
				if ((this._localidad != value))
				{
					this.OnlocalidadChanging(value);
					this.SendPropertyChanging();
					this._localidad = value;
					this.SendPropertyChanged("localidad");
					this.OnlocalidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_nacimiento", DbType="Date")]
		public System.Nullable<System.DateTime> fecha_nacimiento
		{
			get
			{
				return this._fecha_nacimiento;
			}
			set
			{
				if ((this._fecha_nacimiento != value))
				{
					this.Onfecha_nacimientoChanging(value);
					this.SendPropertyChanging();
					this._fecha_nacimiento = value;
					this.SendPropertyChanged("fecha_nacimiento");
					this.Onfecha_nacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_obra_social_id", DbType="Int")]
		public System.Nullable<int> obra_social_id
		{
			get
			{
				return this._obra_social_id;
			}
			set
			{
				if ((this._obra_social_id != value))
				{
					if (this._ObrasSociales.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onobra_social_idChanging(value);
					this.SendPropertyChanging();
					this._obra_social_id = value;
					this.SendPropertyChanged("obra_social_id");
					this.Onobra_social_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_HistoriasClinica", Storage="_HistoriasClinicas", ThisKey="id", OtherKey="paciente_id")]
		public EntitySet<HistoriasClinica> HistoriasClinicas
		{
			get
			{
				return this._HistoriasClinicas;
			}
			set
			{
				this._HistoriasClinicas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObrasSociales_Paciente", Storage="_ObrasSociales", ThisKey="obra_social_id", OtherKey="id", IsForeignKey=true)]
		public ObrasSociales ObrasSociales
		{
			get
			{
				return this._ObrasSociales.Entity;
			}
			set
			{
				ObrasSociales previousValue = this._ObrasSociales.Entity;
				if (((previousValue != value) 
							|| (this._ObrasSociales.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObrasSociales.Entity = null;
						previousValue.Pacientes.Remove(this);
					}
					this._ObrasSociales.Entity = value;
					if ((value != null))
					{
						value.Pacientes.Add(this);
						this._obra_social_id = value.id;
					}
					else
					{
						this._obra_social_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("ObrasSociales");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HistoriasClinicas(HistoriasClinica entity)
		{
			this.SendPropertyChanging();
			entity.Paciente = this;
		}
		
		private void detach_HistoriasClinicas(HistoriasClinica entity)
		{
			this.SendPropertyChanging();
			entity.Paciente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HistoriasClinicas")]
	public partial class HistoriasClinica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _paciente_id;
		
		private System.Nullable<System.DateTime> _fecha;
		
		private string _descripcion;
		
		private EntityRef<Paciente> _Paciente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpaciente_idChanging(int value);
    partial void Onpaciente_idChanged();
    partial void OnfechaChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public HistoriasClinica()
		{
			this._Paciente = default(EntityRef<Paciente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paciente_id", DbType="Int NOT NULL")]
		public int paciente_id
		{
			get
			{
				return this._paciente_id;
			}
			set
			{
				if ((this._paciente_id != value))
				{
					if (this._Paciente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpaciente_idChanging(value);
					this.SendPropertyChanging();
					this._paciente_id = value;
					this.SendPropertyChanged("paciente_id");
					this.Onpaciente_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="Date")]
		public System.Nullable<System.DateTime> fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(1500)")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_HistoriasClinica", Storage="_Paciente", ThisKey="paciente_id", OtherKey="id", IsForeignKey=true)]
		public Paciente Paciente
		{
			get
			{
				return this._Paciente.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente.Entity;
				if (((previousValue != value) 
							|| (this._Paciente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente.Entity = null;
						previousValue.HistoriasClinicas.Remove(this);
					}
					this._Paciente.Entity = value;
					if ((value != null))
					{
						value.HistoriasClinicas.Add(this);
						this._paciente_id = value.id;
					}
					else
					{
						this._paciente_id = default(int);
					}
					this.SendPropertyChanged("Paciente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591

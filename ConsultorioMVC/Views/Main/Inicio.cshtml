@{
    ViewBag.Title = "Inicio";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    string diaMin = Session["idUsuario"] == null ? @DateTime.Today.AddDays(1).ToShortDateString() : @DateTime.Today.ToShortDateString();
}
@model ConsultorioMVC.Models.Turno

<link href="~/Content/daterangepicker.css" rel="stylesheet" />
<link href="~/Content/notification.css" rel="stylesheet" />

@{ if (ViewBag.Message != null)
    {
        if (ViewBag.Error == 1)
        {
            <!-- Modal -->
            <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content d-flex flex-column" id="NotifContainer" style="background-color: khaki;">
                        <button type="button" id="btnCerrar" class="btn-close mb-3 align-self-end justify-content-end" data-bs-dismiss="modal" aria-label="Close"></button>
                        <h3 id="txtNotification" class="fw-bold text-center mb-3"><i class="bi bi-exclamation-triangle"></i>&nbsp;@ViewBag.Message<br /></h3>
                    </div>
                </div>
            </div>
            <button id="btnModal" style="display: none" data-bs-toggle='modal' data-bs-target='#staticBackdrop'></button>
        }
        else if (ViewBag.Error == 2)
        {
            <!-- Modal -->
            <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content d-flex flex-column" id="NotifContainer" style="background-color: crimson;">
                        <button type="button" id="btnCerrar" class="btn-close mb-3 align-self-end justify-content-end" data-bs-dismiss="modal" aria-label="Close"></button>
                        <h3 id="txtNotification" class="fw-bold text-center text-white mb-3"><i class="bi bi-exclamation-diamond"></i>&nbsp;@ViewBag.Message<br /></h3>
                    </div>
                </div>
            </div>
            <button id="btnModal" style="display: none" data-bs-toggle='modal' data-bs-target='#staticBackdrop'></button>
        }
        else
        {
            <!-- Modal -->
            <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content d-flex flex-column px-5" id="NotifContainer" style="background-color: yellowgreen;">
                        <button type="button" id="btnCerrar" class="btn-close mb-3 align-self-end justify-content-end" data-bs-dismiss="modal" aria-label="Close"></button>
                        <h3 id="txtNotification" style="color: black;" class="text-center fw-bold mb-3">
                            <i class="bi bi-info-circle"></i>
                            &nbsp;@ViewBag.Message
                            <br />
                            Día: @Model.DiaHorario.Dia.ToShortDateString() - Hora: @Model.DiaHorario.Horario.Hora.ToShortTimeString()
                            <br />
                            @ViewBag.EmailMessage
                        </h3>
                    </div>
                </div>
            </div>
            <button id="btnModal" style="display: none" data-bs-toggle='modal' data-bs-target='#staticBackdrop'></button>
        }
    }
}

<div class="container py-3 mb-5 containerError2" id="notificationContainer">
    <div class="px-2 d-flex flex-row justify-content-between align-items-center">
        <div></div>
        <div class="text-center">El consultorio permanecerá cerrado desde el 30/10 al 5/11</div>
        <button id="btnCloseNotification" type="button" aria-label="Cerrar">
            <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
                <path id="closeSVG" fill="rgb(0,75,180)" class="error2" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
            </svg>
        </button>
    </div>
</div>

<div class="container sombra-fade">
    <h1 class="text-center text-white">Solicitar un turno</h1>
    <div>
        @{
            using (Html.BeginForm("Save", "Main", FormMethod.Post, new { @id = "formTurno", @class = "formTurno container-fluid sombra", @style = "max-width: 600px" }))
            {
                @Html.AntiForgeryToken();
                <fieldset class="mx-auto mb-3 p-3" style="max-width: 550px">
                    <legend class="fw-bold text-center">Exclusivo para <u>San Carlos Centro</u></legend>
                    <div>
                        <p>➢ Lunes, martes, miércoles y viernes de 09:00 a 13:00 hs.</p>
                        <p>➢ Para cancelar un turno, comunicarse telefónicamente al 03404-420923 / 3404-520532</p>
                    </div>
                    <div>
                        <div id="containerNombre" class="formContainer">
                            <label for="txtNombre" class="asterisco mb-0">Nombre</label>
                            <div class="formInput">
                                @Html.TextBoxFor(model => model.Persona.Nombre, new { @id = "txtNombre", @class = "required", @placeholder = "Tu nombre" })
                                <i class="validacionEstado bi bi-x-circle-fill"></i>
                            </div>
                            @Html.ValidationMessageFor(model => model.Persona.Nombre, null, new { @class = "text-danger mb-4 mt-3" })
                        </div>
                        <div id="containerApellido" class="formContainer">
                            <label for="txtApellido" class="asterisco mb-0">Apellido</label>
                            <div class="formInput">
                                @Html.TextBoxFor(model => model.Persona.Apellido, new { @id = "txtApellido", @class = "required", @placeholder = "Tu apellido" })
                                <i class="validacionEstado bi bi-x-circle-fill"></i>
                            </div>
                            @Html.ValidationMessageFor(model => model.Persona.Apellido, null, new { @class = "text-danger mb-4 mt-3" })
                        </div>
                        <div id="containerTelefono" class="formContainer">
                            <label for="txtTelefono" class="asterisco mb-0">Teléfono</label>
                            <div class="formInput">
                                @Html.TextBoxFor(model => model.Persona.Telefono, new { @id = "txtTelefono", @type = "tel", @class = "required", @placeholder = "Sin 0 ni 15" })
                                <i class="validacionEstado bi bi-x-circle-fill"></i>
                            </div>
                            @Html.ValidationMessageFor(model => model.Persona.Telefono, null, new { @class = "text-danger mb-4 mt-3" })
                        </div>
                        <div id="containerOS" class="formContainer">
                            <label for="comboOS" class="asterisco mb-0">Obra Social</label>
                            <div class="formInput">
                                @Html.DropDownListFor(model => model.Persona.ObraSocial.ID, new SelectList(ViewBag.listadoObrasSociales, "Value", "Text"), "--Seleccione una obra social--", new { @id = "comboOS", @class = "form-select required" })
                                <i class="validacionEstado bi bi-x-circle-fill"></i>
                            </div>
                            @Html.ValidationMessageFor(model => model.Persona.ObraSocial.ID, null, new { @class = "text-danger mb-4 mt-3" })
                        </div>
                        <div id="containerFecha" class="formContainer">
                            <label for="datepicker" class="asterisco mb-0">Día</label>
                            <div class="formInput">
                                @Html.TextBoxFor(model => model.DiaHorario.Dia, "{0:dd/MM/yyyy}", new { @id = "datepicker", @class = "required", @readonly = "readonly", @placeholder = "dd/mm/aaaa", @min = @Html.Raw(diaMin), @max = @DateTime.Today.AddDays(11).ToShortDateString() })
                                <i class="validacionEstado bi bi-x-circle-fill"></i>
                                <input style="display: none" type="text" id="confimaFecha" />
                            </div>
                            @Html.ValidationMessageFor(model => model.DiaHorario.Dia, null, new { @class = "text-danger mb-4 mt-3" })
                        </div>
                        <div id="containerHora" class="formContainer hidden">
                            <label for="comboHoras" class="asterisco mb-0">Hora</label>
                            <div class="formInput">
                                @Html.DropDownListFor(model => model.DiaHorario.Horario.ID, new SelectList(ViewBag.listadoHorarios, "Value", "Text"), "--Seleccione una hora--", new { @id = "comboHoras", @class = "form-select required" })
                                <i class="validacionEstado bi bi-x-circle-fill"></i>
                            </div>
                            @Html.ValidationMessageFor(model => model.DiaHorario.Horario.ID, null, new { @class = "text-danger mb-4 mt-3" })
                        </div>
                        <div id="containerEmail" class="formContainer">
                            <label class="form-label mb-0" for="txtEmail">Correo</label>
                            <div class="formInput">
                                @Html.TextBoxFor(model => model.Persona.Correo, new { @id = "txtEmail", @type = "email", @placeholder = "Recibirás un recordatorio por correo" })
                                <i class="validacionEstado bi bi-x-circle-fill"></i>
                            </div>
                            @Html.ValidationMessageFor(model => model.Persona.Correo, null, new { @class = "text-danger mb-4 mt-3" })
                        </div>
                    </div><!-- Contenedor de los campos  -->
                    <div>
                        <input type="submit" id="btnEnviar" class="btn btn-success mt-4 w-100 fw-bold" value="Reservar turno" />
                    </div>
                    <div class="px-2 py-4 mt-4 errorMessage" id="errorMessage">
                        <p class="my-auto text-center"><i class="bi bi-exclamation-triangle-fill"></i><b> Error: </b>Por favor, completa los datos requeridos</p>
                    </div>
                </fieldset>
            }
        }
    </div>     <!-- Cierra el formulario -->
</div>

<script src="~/Scripts/jquery-3.6.0.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/modernizr-2.8.3.js"></script>
<script src="~/Scripts/moment-with-locales.js"></script>
<script src="~/Scripts/daterangepicker.js"></script>
<script src="~/Scripts/daterangepicker-es.js"></script>
<script src="~/Scripts/main.js"></script>
<script src="~/Scripts/notification.js"></script>

<style>
    #paymentNotificationContainer {
        border-style: solid;
    }

    #btnClosePaymentNotification {
        appearance: none;
        background: none;
        border: 0;
        cursor: pointer;
        float: right;
        text-align: center;
    }
</style>